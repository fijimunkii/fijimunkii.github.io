(function( LightsOut, $, undefined) {

  var Game = Game || {};

  Game.createBoard = function() {
    $('#game-container').html('');

    for (var y=1; y<6; y++) {
      for (var x=1; x<6; x++) {
        $light = $('<div>');
        $light.addClass('light');
        $light.attr('id', y + '-' + x);
        $('#game-container').append($light);
      }
    }
  }

  Game.toggle = function(light) {
    var id = $(light).attr('id'),
        yCoord = parseInt(id[0]),
        xCoord = parseInt(id[2]),
        top = (yCoord-1) + '-' + xCoord,
        right = yCoord + '-' + (xCoord+1),
        bottom = (yCoord+1) + '-' + xCoord,
        left = yCoord + '-' + (xCoord-1);

    // toggle the lights cross-section
    $('#'+top).toggleClass('on');
    $('#'+bottom).toggleClass('on');
    $('#'+left).toggleClass('on');
    $('#'+right).toggleClass('on');
    $(light).toggleClass('on');

    Game.calculateMoves();
  }

  Game.calculateMoves = function() {
    // update the number of moves
    var numMoves = $('#num-moves');
    numMoves.text(parseInt(numMoves.text())+1);

    // if no lights are on, game is won
    var numLeft = $('.on');
    if (numLeft.length === 0) {
      Game.loopLights();
    }
  }

  Game.loopLights = function() {
    // turn off all lights before the loop sequence
    $('.light').removeClass('on');

    // clear the number of moves
    var numMoves = $('#num-moves');
    numMoves.text('');

    // on-off timeout
    function loopTimeout(divId,time,timeOut) {
      setTimeout(function() {
        $('#' + divId).addClass('on');
      }, time);

      setTimeout(function() {
        $('#' + divId).removeClass('on');
      }, time+timeOut);
    }


    // queue the sweeps
    var sweep = [
      ['1-1','1-2','1-3','1-4','1-5'],
      ['2-1','2-2','2-3','2-4','2-5'],
      ['3-1','3-2','3-3','3-4','3-5'],
      ['4-1','4-2','4-3','4-4','4-5'],
      ['5-1','5-2','5-3','5-4','5-5'],
      ['1-1','2-1','3-1','4-1','5-1'],
      ['1-2','2-2','3-2','4-2','5-2'],
      ['1-3','2-3','3-3','4-3','5-3'],
      ['1-4','2-4','3-4','4-4','5-4'],
      ['1-5','2-5','3-5','4-5','5-5']
    ];

    for (var i=0, w=0, sweepLength = sweep.length; i<sweepLength; i++) {
      w++;
      if (i==5) { w+=2; };
      for (var ii=0, innerLength = sweep[i].length; ii<innerLength; ii++) {
        loopTimeout(sweep[i][ii], w*75, 110);
      }
    }

    // delay the loop
    setTimeout(function() {

      // queue the loop
      var loop = ['1-1','1-2','1-3','1-4','1-5','2-5','3-5','4-5','5-5','5-4','5-3','5-2','5-1','4-1','3-1','2-1','2-2','2-3','2-4','3-4','4-4','4-3','4-2','3-2','3-3'];

      for (var i=0, loopLength = loop.length; i<loopLength; i++) {
        loopTimeout(loop[i],i*50, 175);
      }

      // queue the new-game
      setTimeout(function() {
        Game.newGame();

        // reset number of moves
        numMoves.text('0');
      }, 1400);

    }, 1000);
  }

  Game.randGame = function() {
    var numbers = [1,2,3,4,5],
        firstNum = [],
        secondNum = [],
        newGame = [],
        numLights = 0;

    // generate the number of lights for the game
    // retries if number is 0
    while (numLights < 1) {
      numLights = Math.floor(Math.random()*12);
    }

    // numLights times, generates random coordinates
    for (var i=0; i<numLights; i++) {
      var firstIndex = Math.floor(Math.random()*5),
          secondIndex = Math.floor(Math.random()*5);

      // stores the x and y coords
      firstNum.push(numbers[firstIndex]);
      secondNum.push(numbers[secondIndex]);
    }

    // joins x and y coords to create
    // the first half of the board
    for (var i=0; i<numLights; i++) {
      var newLight = firstNum[i] + '-' + secondNum[i];
      newGame.push(newLight);
    }

    // mirrors and inverts coords to
    // create second half of the board
    for (var i=0; i<numLights; i++) {
      var oppFirst = Math.abs(firstNum[i]-6),
          oppSecond = Math.abs(secondNum[i]-6),
          newLight = (oppFirst + '-' + oppSecond);
      newGame.push(newLight);
    }

    // returns the final array of coords
    return newGame;
  }

  Game.setUpGame = function(coordArray) {
    // takes in an array of coordinates and turns the lights on
    for (var i=0, numCoords = coordArray.length; i<numCoords; i++) {
      $('#' + coordArray[i]).addClass('on');
    }
  }

  Game.newGame = function() {
    // calls setUpGame with random coordinates
    // which are generated by randGame()
    var randomCoords = Game.randGame();
    Game.setUpGame(randomCoords);
  }

  Game.listeners = function() {
    // event listener on new-game button
    $('#new-game').on('click', function() {
      Game.loopLights();
    });

    // event listener on game interaction
    $('body').on('click', '.light', function() {
      Game.toggle(this);
    });
  }

  // Public namespacing:

  LightsOut.createBoard = function() {
    Game.createBoard();
  }

  LightsOut.toggle = function(light) {
    Game.toggle(light);
  }

  LightsOut.loopLights = function() {
    Game.loopLights();
  }

  LightsOut.listeners = function() {
    Game.listeners();
  }

}( window.LightsOut = window.LightsOut || {}, $ ));

$(function() {

  // initialize game
  LightsOut.createBoard();
  LightsOut.loopLights();
  LightsOut.listeners();

  // mobile fix for touch events
  FastClick.attach(document.body);

});
